https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/
https://kubernetes.io/docs/tutorials/kubernetes-basics/
https://medium.com/@abhaydiwan/kubernetes-introduction-and-twelve-key-features-cdfe8a1f2d21
https://x-team.com/blog/introduction-kubernetes-architecture/
https://github.com/kubernetes/kubernetes/blob/v1.0.0/docs/getting-started-guides/aws.md
https://github.com/kubernetes/kops/blob/master/docs/aws.md
https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/
https://docs.google.com/document/d/15zfFzDiuD-PotyrlFf1MK7MfqAvALSCKVQ87epdoZ_0/edit#

// AWS setup
install aws cli (https://docs.aws.amazon.com/cli/latest/userguide/installing.html)
kops (https://github.com/kubernetes/kops/blob/master/docs/aws.md)
aws a/c with a user and group has Administrator Access permission
aws configure

cat ~/.aws/credentials
cat ~/.aws/config

dig ns rajughosh.me


aws s3api create-bucket \
    --bucket prefix-rajughosh-me-state-store \
    --region us-east-1


aws s3api put-bucket-versioning --bucket prefix-rajughosh-me-state-store  --versioning-configuration Status=Enabled


save it in:  ~/.zshrc
export NAME=myfirstcluster.rajughosh.me
export KOPS_STATE_STORE=s3://prefix-rajughosh-me-state-store

source ~/.zshrc

aws ec2 describe-availability-zones --region us-east-2

mkdir kops
cd kops
ssh-keygen

// create cluster conf in s3 bucket without build
kops create cluster \
    --zones us-east-2a \
    ${NAME}

// build the cluster
kops update cluster ${NAME} --yes

cat ~/.kube/config

kubectl get nodes

kops validate cluster

kubectl -n kube-system get po

Pod create: https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/

// create a nignx deployment yaml file
vim deploy.yaml

past the following code in the file:

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80



// build the deployment
kubectl apply -f deploy.yaml

// get pod info
kubectl get pod

// Display information about the Deployment
kubectl describe deployment nginx-deployment

// check the pod and 
kubectl port-forward nginx-deployment-6c54bd5869-wvz8r 8080:80


// edit deployment
KUBE_EDITOR="vim" kubectl edit deployment nginx-deployment

// get pod info
kubectl get pod

// get inside container
kubectl exec -it nginx-deployment-6c54bd5869-wvz8r bash






Suggestions:
 * validate cluster: kops validate cluster
 * list nodes: kubectl get nodes --show-labels
 * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.myfirstcluster.rajughosh.me
 * the admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.
 * read about installing addons at: https://github.com/kubernetes/kops/blob/master/docs/addons.md.